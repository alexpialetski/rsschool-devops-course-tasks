name: 'Setup Terraform Environment'
description: 'Sets up the complete Terraform environment with AWS credentials and Node.js'
inputs:
  aws-access-key-id:
    description: 'AWS Access Key ID'
    required: true
  aws-secret-access-key:
    description: 'AWS Secret Access Key'
    required: true
  aws-region:
    description: 'AWS Region'
    required: true
  node-version:
    description: 'Node.js version'
    required: false
    default: '20'
  terraform-version:
    description: 'Terraform version'
    required: false
    default: '~1.8.0'
  skip-setup-apply:
    description: 'Skip the setup apply step'
    required: false
    default: 'false'
outputs:
  aws-account-id:
    description: 'AWS Account ID retrieved from credentials'
    value: ${{ steps.configure-aws.outputs.aws-account-id }}
  aws-region:
    description: 'AWS Region being used'
    value: ${{ inputs.aws-region }}
runs:
  using: 'composite'
  steps:
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ inputs.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci
      shell: bash

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ inputs.terraform-version }}

    - name: Configure AWS credentials
      id: configure-aws
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        aws-region: ${{ inputs.aws-region }}
        output-credentials: true

    - name: Set Terraform variables from AWS context
      run: |
        echo "TF_VAR_region=${{ inputs.aws-region }}" >> $GITHUB_ENV
        echo "TF_VAR_account_id=${{ steps.configure-aws.outputs.aws-account-id }}" >> $GITHUB_ENV
      shell: bash

    - name: Format Check
      run: |
        npx nx run-many -t terraform-fmt --parallel=3
        # Check if any files were modified by formatting
        if [ -n "$(git status --porcelain)" ]; then
          echo "Files need formatting. Please run 'npm run format' or 'npx nx run-many -t terraform-fmt'"
          git diff
          exit 1
        fi
      shell: bash

    - name: Validate Terraform (Setup)
      if: ${{ inputs.skip-setup-apply != 'true' }}
      run: |
        npx nx run setup:terraform-validate
      shell: bash

    - name: Apply Setup Infrastructure (creates backend for cluster)
      if: ${{ inputs.skip-setup-apply != 'true' }}
      run: npx nx run setup:terraform-apply
      shell: bash
